{"version":3,"sources":["store/reducer.js","services/api.js","store/sagas.js","routes/history.js","store/index.js","services/localstorage.js","store/actions.js","pages/Main/index.jsx","pages/Order/index.jsx","pages/Missions/index.jsx","routes/index.jsx","App.js","serviceWorker.js","index.js","assets/imgs/jedi_female.svg","assets/imgs/jedi_male.svg","assets/imgs/sith_female.svg","assets/imgs/sith_male.svg"],"names":["INITIAL_STATE","profile","genre","undefined","name","order","data","loading","error","apiGetActivity","filter","Axios","get","then","response","fetchActivity","root","action","console","log","call","put","type","payload","activity","all","takeLatest","history","createHashHistory","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","combineReducers","sw","state","d","key","router","connectRouter","applyMiddleware","subscribe","stringify","setItem","saveState","getState","run","rootSaga","setMainAction","Main","useState","Genre","setGenre","Name","setName","useSelector","dispatch","useDispatch","useEffect","push","Container","className","Card","body","CardTitle","tag","Form","onSubmit","e","preventDefault","Col","FormGroup","row","xs","Input","id","label","onChange","checked","required","src","FemaleSVG","MaleSVG","placeholder","target","value","Button","color","Order","setOrder","JediMaleSVG","JediFemaleSVG","SithMaleSVG","SithFemaleSVG","onClick","activityType","education","recreational","social","diy","charity","cooking","relaxation","music","busywork","initialFilter","accessibility","participants","Missions","Filter","setFilter","HandleChange","newFilter","fluid","Row","md","style","length","Label","for","CustomInput","defaultValue","Object","keys","map","k","min","disabled","ListGroup","a","ListGroupItem","ListGroupItemHeading","UncontrolledCollapse","toggler","ListGroupItemText","toFixed","Routes","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d8418593.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n  profile: {\r\n    genre: undefined,\r\n    name: undefined,\r\n    order: undefined\r\n  },\r\n  data: [],\r\n  loading: false,\r\n  error: false\r\n};\r\n\r\nexport default function sw(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case \"REQUEST_ACTIVITY_FETCH\":\r\n      return { ...state, loading: true };\r\n    case \"SUCCESS_ACTIVITY_FETCH\":\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload.activity],\r\n        loading: false,\r\n        error: false\r\n      };\r\n    case \"FAILURE_ACTIVITY_FETCH\":\r\n      return { ...state, data: [], loading: false, error: true };\r\n    case \"REMOVE_ACTIVITY\":\r\n      return {\r\n        ...state,\r\n        data: state.data.filter(d => d.key !== action.payload.key)\r\n      };\r\n    case \"SET_MAIN\":\r\n      return {\r\n        ...state,\r\n        profile: { genre: action.payload.genre, name: action.payload.name }\r\n      };\r\n    case \"SET_ORDER\":\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, order: action.payload.order }\r\n      };\r\n    case \"RESET_PROFILE\":\r\n      return { ...state, profile: INITIAL_STATE.profile };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Axios from \"axios\";\r\n\r\nexport const apiGetActivity = filter =>\r\n  Axios\r\n    .get(\"https://www.boredapi.com/api/activity\", filter)\r\n    .then(response => response.data);\r\n","import { takeLatest, put, call, all } from \"redux-saga/effects\";\r\nimport { apiGetActivity } from \"../services/api\";\r\n\r\nfunction* fetchActivity(action) {\r\n  try {\r\n    console.log(\"teste\");\r\n\r\n    const response = yield call(apiGetActivity, action.filter);\r\n    console.log(response);\r\n    yield put({\r\n      type: \"SUCCESS_ACTIVITY_FETCH\",\r\n      payload: { activity: response }\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n\r\n    yield put({ type: \"FAILURE_ACTIVITY_FETCH\" });\r\n  }\r\n}\r\n\r\nexport default function* root() {\r\n  yield all([takeLatest(\"REQUEST_ACTIVITY_FETCH\", fetchActivity)]);\r\n}\r\n","import { createHashHistory } from \"history\";\r\n\r\nconst history = createHashHistory();\r\n\r\nexport default history;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport sw from \"./reducer\";\r\nimport rootSaga from \"./sagas\";\r\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\r\nimport history from \"../routes/history\";\r\nimport { loadState, saveState } from \"../services/localstorage\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\r\nconst persistedState = loadState();\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    sw,\r\n    router: connectRouter(history)\r\n  }),\r\n  persistedState,\r\n  applyMiddleware(...middlewares)\r\n);\r\n\r\nstore.subscribe(() => {\r\n  saveState({\r\n    sw: store.getState().sw\r\n  });\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n};\r\n","export const requestActivity = filter => ({\r\n  type: \"REQUEST_ACTIVITY_FETCH\",\r\n  payload: { filter }\r\n});\r\n\r\nexport const removeActivity = key => ({\r\n  type: \"REMOVE_ACTIVITY\",\r\n  payload: { key }\r\n});\r\n\r\n\r\nexport const setMainAction = (name, genre) => ({\r\n  type: \"SET_MAIN\",\r\n  payload: { name, genre }\r\n});\r\n\r\nexport const setOrderAction = order => ({\r\n  type: \"SET_ORDER\",\r\n  payload: { order }\r\n});\r\n\r\nexport const resetProfile = () => ({\r\n  type: \"RESET_PROFILE\"\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Card,\r\n  Form,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Container,\r\n  CardTitle\r\n} from \"reactstrap\";\r\nimport { setMainAction } from \"../../store/actions\";\r\nimport { push } from \"connected-react-router\";\r\nimport ReactSVG from \"react-svg\";\r\nimport FemaleSVG from \"../../assets/imgs/jedi_female.svg\";\r\nimport MaleSVG from \"../../assets/imgs/jedi_male.svg\";\r\n\r\nconst Main = () => {\r\n  const [Genre, setGenre] = useState(null);\r\n  const [Name, setName] = useState(\"\");\r\n\r\n  const profile = useSelector(state => state.sw.profile);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (profile.name && profile.genre) {\r\n      dispatch(push(\"/order\"));\r\n    }\r\n  }, [profile]);\r\n\r\n  const HandleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(setMainAction(Name, Genre));\r\n  };\r\n\r\n  return (\r\n    <Container className=\"step-1\">\r\n      <Card body>\r\n        <CardTitle className=\"text-center\" tag=\"h2\">Selecione seu gênero:</CardTitle>\r\n        <Form className=\"form\" onSubmit={HandleSubmit}>\r\n          <Col>\r\n            <FormGroup row>\r\n              <Col xs={6} className=\"text-center\">\r\n                <label>\r\n                  <Input\r\n                    id=\"female-genre\"\r\n                    type=\"radio\"\r\n                    name=\"genre\"\r\n                    label=\"Feminino\"\r\n                    className=\"radio-svg\"\r\n                    onChange={() => setGenre(\"female\")}\r\n                    checked={Genre === \"female\"}\r\n                    required\r\n                  />\r\n                  <ReactSVG src={FemaleSVG} />\r\n                </label>\r\n              </Col>\r\n              <Col xs={6} className=\"text-center\">\r\n                <label>\r\n                  <Input\r\n                    id=\"male-genre\"\r\n                    type=\"radio\"\r\n                    name=\"genre\"\r\n                    label=\"Masculino\"\r\n                    className=\"radio-svg\"\r\n                    onChange={() => setGenre(\"male\")}\r\n                    checked={Genre === \"male\"}\r\n                    required\r\n                  />\r\n                  <ReactSVG src={MaleSVG} />\r\n                </label>\r\n              </Col>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                required\r\n                placeholder=\"Seu nome\"\r\n                onChange={e => setName(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col className={\"text-center\"}>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Próximo\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Card,\r\n  Form,\r\n  Col,\r\n  FormGroup,\r\n  Button,\r\n  Container,\r\n  Input,\r\n  CardTitle\r\n} from \"reactstrap\";\r\nimport { setOrderAction, setMainAction } from \"../../store/actions\";\r\nimport { push } from \"connected-react-router\";\r\nimport ReactSVG from \"react-svg\";\r\nimport JediFemaleSVG from \"../../assets/imgs/jedi_female.svg\";\r\nimport JediMaleSVG from \"../../assets/imgs/jedi_male.svg\";\r\n\r\nimport SithFemaleSVG from \"../../assets/imgs/sith_female.svg\";\r\nimport SithMaleSVG from \"../../assets/imgs/sith_male.svg\";\r\n\r\nconst Order = () => {\r\n  const profile = useSelector(state => state.sw.profile);\r\n\r\n  const [Order, setOrder] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!profile.name || !profile.genre) {\r\n      dispatch(push(\"/\"));\r\n    } else if (profile.order) {\r\n      dispatch(push(\"/missions\"));\r\n    }\r\n  }, [profile]);\r\n\r\n  const HandleSubmit = e => {\r\n    e.preventDefault();\r\n    if (Order) {\r\n      dispatch(setOrderAction(Order));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"step-1\">\r\n      <Card body>\r\n        <CardTitle className=\"text-center\" tag=\"h2\">\r\n          Selecione seu gênero:\r\n        </CardTitle>\r\n        <Form className=\"form\" onSubmit={HandleSubmit}>\r\n          <FormGroup row>\r\n            <Col xs={6} className=\"text-center\">\r\n              <label>\r\n                <Input\r\n                  id=\"jedi-order\"\r\n                  type=\"radio\"\r\n                  name=\"order\"\r\n                  label=\"Jedi\"\r\n                  className=\"radio-svg\"\r\n                  onChange={() => setOrder(\"jedi\")}\r\n                  checked={Order === \"jedi\"}\r\n                />\r\n                <ReactSVG\r\n                  src={profile.genre === \"male\" ? JediMaleSVG : JediFemaleSVG}\r\n                />\r\n              </label>\r\n            </Col>\r\n            <Col xs={6} className=\"text-center\">\r\n              <label>\r\n                <Input\r\n                  id=\"sith-genre\"\r\n                  type=\"radio\"\r\n                  name=\"genre\"\r\n                  label=\"Sith\"\r\n                  className=\"radio-svg\"\r\n                  onChange={() => setOrder(\"sith\")}\r\n                  checked={Order === \"sith\"}\r\n                />\r\n                <ReactSVG\r\n                  src={profile.genre === \"male\" ? SithMaleSVG : SithFemaleSVG}\r\n                />\r\n              </label>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Col className={\"text-center\"} xs={6}>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => dispatch(setMainAction(undefined, undefined))}\r\n              >\r\n                Voltar\r\n              </Button>\r\n            </Col>\r\n            <Col className={\"text-center\"} xs={6}>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Próximo\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Button,\r\n  UncontrolledCollapse\r\n} from \"reactstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  requestActivity,\r\n  removeActivity,\r\n  resetProfile\r\n} from \"../../store/actions\";\r\nimport { FaSpinner, FaTrash } from \"react-icons/fa\";\r\nimport { push } from \"connected-react-router\";\r\nimport { FaFemale, FaMale, FaJedi, FaSith } from \"react-icons/fa\";\r\n// import { Container } from './styles';\r\nimport JediFemaleSVG from \"../../assets/imgs/jedi_female.svg\";\r\nimport JediMaleSVG from \"../../assets/imgs/jedi_male.svg\";\r\nimport SithFemaleSVG from \"../../assets/imgs/sith_female.svg\";\r\nimport SithMaleSVG from \"../../assets/imgs/sith_male.svg\";\r\n\r\nconst activityType = {\r\n  education: \"Education\",\r\n  recreational: \"Recreational\",\r\n  social: \"Social\",\r\n  diy: \"Do It Yourself\",\r\n  charity: \"Charity\",\r\n  cooking: \"Cooking\",\r\n  relaxation: \"Relaxation\",\r\n  music: \"Music\",\r\n  busywork: \"Busywork\"\r\n};\r\n\r\nconst GetAvatar = (genre, order) => {\r\n  if (genre === \"male\") {\r\n    return order === \"jedi\" ? JediMaleSVG : SithMaleSVG;\r\n  } else {\r\n    return order === \"jedi\" ? JediFemaleSVG : SithFemaleSVG;\r\n  }\r\n};\r\n\r\nconst initialFilter = {\r\n  accessibility: 0,\r\n  type: 0,\r\n  participants: 1\r\n};\r\n\r\nconst Missions = () => {\r\n  const { profile, data, loading } = useSelector(state => state.sw);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!profile.name || !profile.genre) {\r\n      dispatch(push(\"/\"));\r\n    } else if (!profile.order) {\r\n      dispatch(push(\"/order\"));\r\n    }\r\n  }, [push, profile]);\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(requestActivity(Filter));\r\n  };\r\n  const [Filter, setFilter] = useState(initialFilter);\r\n\r\n  const HandleChange = e => {\r\n    let newFilter = Filter;\r\n    newFilter[e.target.name] = e.target.value;\r\n    setFilter(newFilter);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"mt-5\">\r\n      <Row>\r\n        <Col xs={12} md={4}>\r\n          <Card body>\r\n            <img\r\n              src={GetAvatar(profile.genre, profile.order)}\r\n              className=\"img-fluid rounded-circle mb-2\"\r\n            />\r\n            <h6>\r\n              Bem vindo, <strong>{profile.name}</strong>!\r\n            </h6>\r\n            <p>\r\n              Sexo:{\" \"}\r\n              {profile.genre === \"male\" ? (\r\n                <span>\r\n                  <FaMale style={{ color: \"cyan\" }} /> Masculino\r\n                </span>\r\n              ) : (\r\n                <span>\r\n                  <FaFemale style={{ color: \"red\" }} />\r\n                  Feminino\r\n                </span>\r\n              )}\r\n            </p>\r\n            <p>\r\n              Ordem:{\" \"}\r\n              {profile.order === \"jedi\" ? (\r\n                <span>\r\n                  <FaJedi style={{ color: \"blue\" }} />\r\n                  Jedi\r\n                </span>\r\n              ) : (\r\n                <span>\r\n                  <FaSith style={{ color: \"red\" }} />\r\n                  Sith\r\n                </span>\r\n              )}\r\n            </p>\r\n            <p>Numero de atividades: {data.length}</p>\r\n            <Button onClick={() => dispatch(resetProfile())}>\r\n              Editar Personagem\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={12} md={8}>\r\n          <Card body>\r\n            <Form onSubmit={submitHandler}>\r\n              <FormGroup>\r\n                <Label for=\"accessibility\">Accessibility:</Label>\r\n                <CustomInput\r\n                  type=\"range\"\r\n                  id=\"accessibility\"\r\n                  name=\"accessibility\"\r\n                  defaultValue={Filter.accessibility}\r\n                  onChange={HandleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"type\">Type:</Label>\r\n                <Input\r\n                  id=\"type\"\r\n                  name=\"type\"\r\n                  type=\"select\"\r\n                  defaultValue={Filter.type}\r\n                  onChange={HandleChange}\r\n                >\r\n                  {Object.keys(activityType).map(k => (\r\n                    <option value={k} key={k}>\r\n                      {activityType[k]}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"participants\">Participants:</Label>\r\n                <Input\r\n                  name=\"participants\"\r\n                  id=\"participants\"\r\n                  type=\"number\"\r\n                  min={0}\r\n                  defaultValue={Filter.participants}\r\n                  onChange={HandleChange}\r\n                />\r\n              </FormGroup>\r\n              <Button type=\"submit\" color=\"primary\" disabled={loading}>\r\n                {loading ? <FaSpinner className=\"icon-spin\" /> : \"Add Activity\"}\r\n              </Button>\r\n            </Form>\r\n          </Card>\r\n          <Card body>\r\n            <ListGroup>\r\n              {data.map(a => (\r\n                <ListGroupItem key={a.key}>\r\n                  <ListGroupItemHeading id={`toggler-${a.key}`}>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={() => dispatch(removeActivity(a.key))}\r\n                    >\r\n                      <FaTrash />\r\n                    </Button>\r\n                    <Button color=\"link\">{a.activity}</Button>\r\n                  </ListGroupItemHeading>\r\n                  <UncontrolledCollapse toggler={`#toggler-${a.key}`}>\r\n                    <ListGroupItemText>\r\n                      <p>\r\n                        Accessibility: {(a.accessibility * 100).toFixed(1)}%\r\n                      </p>\r\n                      <p>Participants: {a.participants}</p>\r\n                      <p>Type: {activityType[a.type]}</p>\r\n                    </ListGroupItemText>\r\n                  </UncontrolledCollapse>\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n/*\r\nactivity\r\n\r\nDescription of the queried activity\r\n\r\n\r\naccessibility\r\n\r\nA factor describing how possible an event is to do with zero being the most accessible\r\n\r\n[0.0, 1.0]\r\n\r\ntype\r\n\r\nType of the activity\r\n\r\n[]\r\n\r\nparticipants\r\n\r\nThe number of people that this activity could involve\r\n\r\n[0, n]\r\n\r\nprice\r\n\r\nA factor describing the cost of the event with zero being free\r\n\r\n[0, 1]\r\n\r\nkey\r\n\r\nA unique numeric id\r\n\r\n[1000000, 9999999]\r\n*/\r\nexport default Missions;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Main from \"../pages/Main\";\r\nimport Order from \"../pages/Order\";\r\nimport Missions from \"../pages/Missions\";\r\nimport history from \"./history\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\n\r\nconst Routes = () => (\r\n  <ConnectedRouter history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route path=\"/order\" component={Order} />\r\n        <Route path=\"/missions\" component={Missions} />\r\n      </Switch>\r\n  </ConnectedRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import { Provider } from \"react-redux\";\nimport React from \"react\";\nimport store from \"./store\";\nimport Routes from \"./routes\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/jedi_female.a8c9f782.svg\";","module.exports = __webpack_public_path__ + \"static/media/jedi_male.8655a845.svg\";","module.exports = __webpack_public_path__ + \"static/media/sith_female.5dd0d2a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/sith_male.e2b17dd4.svg\";"],"sourceRoot":""}